# Generated by Django 3.0.2 on 2020-01-23 08:32

from django.db import migrations, models
import django.db.models.deletion
import resistome.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Annotation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.PositiveIntegerField(blank=True, null=True)),
                ('end', models.PositiveIntegerField(blank=True, null=True)),
                ('orientation', models.CharField(blank=True, choices=[('+', '+'), ('-', '-')], max_length=1, null=True)),
                ('gene', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('gene_name', models.CharField(blank=True, max_length=20, null=True)),
                ('rgi', models.CharField(blank=True, choices=[('Yes', 'Yes')], max_length=3, null=True)),
                ('ec_number', models.CharField(blank=True, max_length=20, null=True)),
                ('product', models.TextField(blank=True, null=True)),
                ('inference', models.TextField(blank=True, null=True)),
                ('jbrowse_link', models.URLField(blank=True, max_length=1000, null=True)),
                ('protein_sequence', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Assembly',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assembly', models.CharField(db_index=True, max_length=20, unique=True)),
                ('total_scaffolds', models.PositiveIntegerField(blank=True, null=True)),
                ('circular_scaffolds', models.PositiveIntegerField(blank=True, null=True)),
                ('circularity_ratio', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True)),
                ('scaffolds_2kb_or_shorter', models.PositiveIntegerField(blank=True, null=True)),
                ('assembly_length', models.PositiveIntegerField(blank=True, null=True)),
                ('max_scaffold_length', models.PositiveIntegerField(blank=True, null=True)),
                ('assembler', models.CharField(blank=True, max_length=40, null=True)),
            ],
            options={
                'verbose_name_plural': 'Assemblies',
            },
        ),
        migrations.CreateModel(
            name='BiologicalSampleOfIsolation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'verbose_name_plural': 'biological samples of isolation',
            },
        ),
        migrations.CreateModel(
            name='HospitalAdmissionUnit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='IsolationLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Sample',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('barcode', models.CharField(db_index=True, max_length=20, unique=True)),
                ('name', models.CharField(db_index=True, max_length=20)),
                ('coruna_code', models.CharField(blank=True, db_index=True, max_length=200, null=True, verbose_name='coru√±a code')),
                ('other_resistance_mechanisms', models.CharField(blank=True, max_length=200, null=True)),
                ('sequence_type', models.CharField(blank=True, max_length=200, null=True, verbose_name='sequence type (ST)')),
                ('infection_or_colonization', models.CharField(blank=True, choices=[('I', 'Infection'), ('C', 'Colonization')], max_length=1, null=True)),
                ('acquisition', models.CharField(blank=True, help_text='Community/Hospital/LTCF acquisition', max_length=4, null=True)),
                ('type_of_infection', models.CharField(blank=True, max_length=200, null=True)),
                ('outbreak', models.NullBooleanField()),
                ('patient_data_sex', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female')], max_length=1, null=True)),
                ('patient_data_age', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('pt', models.CharField(blank=True, max_length=200, null=True, verbose_name='P/T')),
                ('ctx', models.CharField(blank=True, max_length=200, null=True, verbose_name='CTX')),
                ('caz', models.CharField(blank=True, max_length=200, null=True, verbose_name='CAZ ')),
                ('caz_avi', models.CharField(blank=True, max_length=200, null=True, verbose_name='CAZ-AVI')),
                ('cef', models.CharField(blank=True, max_length=200, null=True, verbose_name='CEF')),
                ('azt', models.CharField(blank=True, max_length=200, null=True, verbose_name='AZT')),
                ('ert', models.CharField(blank=True, max_length=200, null=True, verbose_name='ERT')),
                ('mem', models.CharField(blank=True, max_length=200, null=True, verbose_name='MEM')),
                ('imi', models.CharField(blank=True, max_length=200, null=True, verbose_name='IMI')),
                ('imi_rele', models.CharField(blank=True, max_length=200, null=True, verbose_name='IMI-RELE')),
                ('amk', models.CharField(blank=True, max_length=200, null=True, verbose_name='AMK')),
                ('cip', models.CharField(blank=True, max_length=200, null=True, verbose_name='CIP')),
                ('colis', models.CharField(blank=True, max_length=200, null=True, verbose_name='COLIS')),
                ('fosfo_nueva', models.CharField(blank=True, max_length=200, null=True, verbose_name='FOSFO NUEVA')),
                ('genta', models.CharField(blank=True, max_length=200, null=True, verbose_name='GENTA')),
                ('tobra', models.CharField(blank=True, max_length=200, null=True, verbose_name='TOBRA')),
                ('biological_sample_of_isolation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='resistome.BiologicalSampleOfIsolation')),
                ('hospital_admission_unit', models.ForeignKey(blank=True, max_length=200, null=True, on_delete=django.db.models.deletion.CASCADE, to='resistome.HospitalAdmissionUnit')),
                ('isolation_location', models.ForeignKey(blank=True, help_text='Hospital/City where strain was isolated', max_length=200, null=True, on_delete=django.db.models.deletion.CASCADE, to='resistome.IsolationLocation')),
            ],
        ),
        migrations.CreateModel(
            name='Species',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'verbose_name_plural': 'species',
            },
        ),
        migrations.CreateModel(
            name='TypeOfCarbapenemase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'verbose_name_plural': 'types of carbapenemase',
            },
        ),
        migrations.CreateModel(
            name='SpeciesVerification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('illumina_sp', models.CharField(blank=True, max_length=200, null=True)),
                ('ont_sp', models.CharField(blank=True, max_length=200, null=True)),
                ('lims_sp', models.CharField(blank=True, max_length=200, null=True)),
                ('seq_agreement', models.NullBooleanField()),
                ('verified', models.NullBooleanField()),
                ('sample', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='resistome.Sample')),
            ],
        ),
        migrations.CreateModel(
            name='Scaffold',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scaffold', models.CharField(db_index=True, max_length=20, unique=True)),
                ('scaffold_length', models.PositiveIntegerField(blank=True, null=True)),
                ('depth', models.DecimalField(decimal_places=2, max_digits=10)),
                ('circular', models.NullBooleanField()),
                ('assembly', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='resistome.Assembly')),
                ('sample', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='resistome.Sample')),
            ],
        ),
        migrations.AddField(
            model_name='sample',
            name='species',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='resistome.Species', verbose_name='Genus/species'),
        ),
        migrations.AddField(
            model_name='sample',
            name='type_of_carbapenemase',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='resistome.TypeOfCarbapenemase'),
        ),
        migrations.CreateModel(
            name='Rgi',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gene', models.CharField(max_length=20, unique=True)),
                ('complete', models.NullBooleanField()),
                ('start_type', models.CharField(blank=True, choices=[('ATG', 'ATG'), ('GTG', 'GTG'), ('TTG', 'TTG'), ('Edge', 'Edge')], max_length=4, null=True)),
                ('rbs_motif', models.CharField(blank=True, max_length=20, null=True)),
                ('rbs_spacer', models.CharField(blank=True, max_length=20, null=True)),
                ('gc_cont', models.DecimalField(decimal_places=3, max_digits=5)),
                ('cut_off', models.CharField(blank=True, choices=[('strict', 'strict'), ('perfect', 'perfect'), ('loose', 'loose')], max_length=7, null=True)),
                ('pass_bitscore', models.PositiveIntegerField(blank=True, null=True)),
                ('best_hit_bitscore', models.DecimalField(decimal_places=3, max_digits=8)),
                ('best_hit_aro', models.TextField(blank=True, null=True)),
                ('best_identities', models.DecimalField(decimal_places=3, max_digits=7)),
                ('aro', models.PositiveIntegerField(blank=True, null=True)),
                ('model_type', models.CharField(blank=True, max_length=40, null=True)),
                ('snps_in_best_hit_aro', models.CharField(blank=True, max_length=200, null=True)),
                ('other_snps', models.CharField(blank=True, max_length=200, null=True)),
                ('drug_class', models.CharField(blank=True, max_length=500, null=True)),
                ('resistance_mechanism', models.CharField(blank=True, max_length=500, null=True)),
                ('amr_gene_family', models.CharField(blank=True, max_length=500, null=True)),
                ('predicted_dna', models.TextField(blank=True, null=True)),
                ('predicted_protein', models.TextField(blank=True, null=True)),
                ('card_protein_sequence', models.TextField(blank=True, null=True)),
                ('percentage_length_of_reference_sequence', models.DecimalField(decimal_places=2, max_digits=5)),
                ('annotation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rgi_set', related_query_name='rgi_set', to='resistome.Annotation')),
            ],
        ),
        migrations.CreateModel(
            name='MLST',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pubmlst', models.CharField(blank=True, max_length=200, null=True, verbose_name='PubMLST')),
                ('st', models.IntegerField(db_index=True, verbose_name='ST')),
                ('alleles', models.TextField(blank=True, null=True)),
                ('assembly', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='resistome.Assembly')),
            ],
            options={
                'verbose_name_plural': 'MLST',
            },
        ),
        migrations.CreateModel(
            name='EUCAST',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('piper', models.CharField(blank=True, max_length=1, null=True, verbose_name='PIPER')),
                ('pt', models.CharField(blank=True, max_length=1, null=True, verbose_name='P/T')),
                ('ctx', models.CharField(blank=True, max_length=1, null=True, verbose_name='CTX')),
                ('caz', models.CharField(blank=True, max_length=1, null=True, verbose_name='CAZ')),
                ('caz_avi', models.CharField(blank=True, max_length=1, null=True, verbose_name='CAZ-AVI')),
                ('cef', models.CharField(blank=True, max_length=1, null=True, verbose_name='CEF')),
                ('azt', models.CharField(blank=True, max_length=1, null=True, verbose_name='AZT')),
                ('mem', models.CharField(blank=True, max_length=1, null=True, verbose_name='MEM')),
                ('imi', models.CharField(blank=True, max_length=1, null=True, verbose_name='IMI')),
                ('imi_rele', models.CharField(blank=True, max_length=1, null=True, verbose_name='IMI-RELE')),
                ('ert', models.CharField(blank=True, max_length=1, null=True, verbose_name='ERT')),
                ('fosfo', models.CharField(blank=True, max_length=1, null=True, verbose_name='FOSFO')),
                ('genta', models.CharField(blank=True, max_length=1, null=True, verbose_name='GENTA')),
                ('tobra', models.CharField(blank=True, max_length=1, null=True, verbose_name='TOBRA')),
                ('amk', models.CharField(blank=True, max_length=1, null=True, verbose_name='AMK')),
                ('cip', models.CharField(blank=True, max_length=1, null=True, verbose_name='CIP')),
                ('colis', models.CharField(blank=True, max_length=1, null=True, verbose_name='COLIS')),
                ('sample', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='resistome.Sample')),
            ],
            options={
                'verbose_name_plural': 'EUCAST',
            },
        ),
        migrations.CreateModel(
            name='DataFiles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assembly_fasta', models.FilePathField(path=resistome.models.assembly_fasta_path)),
                ('annotation_protein_fasta', models.FilePathField(path=resistome.models.annotation_path)),
                ('annotation_transcript_fasta', models.FilePathField(path=resistome.models.annotation_path)),
                ('annotation_gff', models.FilePathField(path=resistome.models.annotation_path)),
                ('assembly', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='resistome.Assembly')),
            ],
            options={
                'verbose_name_plural': 'Data files',
            },
        ),
        migrations.CreateModel(
            name='CLSI',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('piper', models.CharField(blank=True, max_length=1, null=True, verbose_name='PIPER')),
                ('pt', models.CharField(blank=True, max_length=1, null=True, verbose_name='P/T')),
                ('ctx', models.CharField(blank=True, max_length=1, null=True, verbose_name='CTX')),
                ('caz', models.CharField(blank=True, max_length=1, null=True, verbose_name='CAZ')),
                ('caz_avi', models.CharField(blank=True, max_length=1, null=True, verbose_name='CAZ-AVI')),
                ('cef', models.CharField(blank=True, max_length=1, null=True, verbose_name='CEF')),
                ('azt', models.CharField(blank=True, max_length=1, null=True, verbose_name='AZT')),
                ('mem', models.CharField(blank=True, max_length=1, null=True, verbose_name='MEM')),
                ('imi', models.CharField(blank=True, max_length=1, null=True, verbose_name='IMI')),
                ('imi_rele', models.CharField(blank=True, max_length=1, null=True, verbose_name='IMI-RELE')),
                ('ert', models.CharField(blank=True, max_length=1, null=True, verbose_name='ERT')),
                ('fosfo', models.CharField(blank=True, max_length=1, null=True, verbose_name='FOSFO')),
                ('genta', models.CharField(blank=True, max_length=1, null=True, verbose_name='GENTA')),
                ('tobra', models.CharField(blank=True, max_length=1, null=True, verbose_name='TOBRA')),
                ('amk', models.CharField(blank=True, max_length=1, null=True, verbose_name='AMK')),
                ('cip', models.CharField(blank=True, max_length=1, null=True, verbose_name='CIP')),
                ('colis', models.CharField(blank=True, max_length=3, null=True, verbose_name='COLIS')),
                ('sample', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='resistome.Sample')),
            ],
            options={
                'verbose_name_plural': 'CLSI',
            },
        ),
        migrations.AddField(
            model_name='assembly',
            name='sample',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='resistome.Sample'),
        ),
        migrations.AddField(
            model_name='annotation',
            name='scaffold',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='resistome.Scaffold'),
        ),
    ]
